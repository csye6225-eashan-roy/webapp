name: CI for building image

on:
  push:
    branches:
      - main

jobs:
  packer_build_image:
    runs-on: ubuntu-latest

    env:
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/credentials.json
      DEPLOYMENT_ZONE: 'us-central1-a'
      VPC_NETWORK: 'default'
      SOURCE_IMAGE_FAMILY: 'ubuntu-2004-lts'
      IMAGE_FAMILY: 'custom-webapp-family'
      SSH_USERNAME: 'webapp_user'
      MACHINE_TYPE: 'e2-medium'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib
          sudo systemctl start postgresql.service
          sudo -u postgres psql -c "CREATE DATABASE users;"
          sudo -u postgres psql -c "CREATE USER ${{ secrets.DATABASE_USER }} WITH ENCRYPTED PASSWORD '${{ secrets.DATABASE_PASSWORD }}';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE users TO ${{ secrets.DATABASE_USER }};"

      - name: Build with Maven
        run: mvn clean install -DskipTests # Compile the code and install dependencies without running tests

      - name: Run tests
        run: mvn test # Run your tests
        env:
          SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/users"
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DATABASE_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: "update"

      - name: Set up Google Cloud credentials
        run: echo -e "$GCLOUD_CREDENTIALS" > /tmp/credentials.json
        env:
          GCLOUD_CREDENTIALS: ${{ secrets.GCLOUD_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest

      - name: Initialize Packer
        run: packer init packer/template/webapp-gcp-custom-image.pkr.hcl

      - name: Build Custom Image with Packer
        run: |
          packer build \
            -var "jar_file=target/app-0.0.1-SNAPSHOT.jar" \
            -var "project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var "zone=${DEPLOYMENT_ZONE}" \
            -var "vpc_network=${VPC_NETWORK}" \
            -var "source_image_family=${SOURCE_IMAGE_FAMILY}" \
            -var "image_family=${IMAGE_FAMILY}" \
            -var "ssh_username=${SSH_USERNAME}" \
            -var "vm_size=${MACHINE_TYPE}" \
            -var "database_user=${{ secrets.DATABASE_USER }}" \
            -var "database_password=${{ secrets.DATABASE_PASSWORD }}" \
            packer/template/webapp-gcp-custom-image.pkr.hcl